on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 4 * * 0'

jobs:
  build-image:
    strategy:
      fail-fast: false
      matrix:
        pyver: [3.7,3.8,3.9]
        include:
        - pyver: pyston
          main: true
    runs-on: ubuntu-latest
    name: Build Python ${{ matrix.pyver }} Image
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Set Names
      id: names
      run: |
        MR="ghcr.io/oggm"
        DI="$(date +%Y%m%d)"
        PV="${{ matrix.pyver }}"
        [[ "$PV" == py* ]] || PV="py$PV"
        echo "::set-output name=vertag::$PV"
        echo "::set-output name=untested::$MR/untested_base"
        echo "::set-output name=base::$MR/base"
        if [[ "${{ matrix.main }}" == "true" ]]; then
          echo "::set-output name=untested_latest::$MR/untested_base:latest"
          echo "::set-output name=untested_date::$MR/untested_base:$DI"
          echo "::set-output name=base_latest::$MR/base:latest"
          echo "::set-output name=base_date::$MR/base:$DI"
        fi
    - name: Stop Commands
      run: T="$(echo -n ${{ github.token }} | sha256sum | head -c 64)" && echo -e "::add-mask::${T}\n::stop-commands::${T}"
    - name: Build untested_base
      uses: docker/build-push-action@v2
      with:
        context: untested_base
        pull: true
        push: true
        build-args: |
          PYTHON_VERSION=${{ matrix.pyver }}
        tags: |
          ${{ steps.names.outputs.untested }}:${{ steps.names.outputs.vertag }}
          ${{ steps.names.outputs.untested_latest }}
          ${{ steps.names.outputs.untested_date }}
        cache-to: type=gha,mode=max
        cache-from: type=gha
    - name: Test image
      run: docker run --rm "${{ steps.names.outputs.untested }}:${{ steps.names.outputs.vertag }}" /root/test.sh
    - name: Build base
      uses: docker/build-push-action@v2
      if: ${{ matrix.main }}
      with:
        context: base
        push: true
        tags: |
          ${{ steps.names.outputs.base_latest }}
          ${{ steps.names.outputs.base_date }}
    - name: Trigger OGGM
      if: ${{ matrix.main }}
      uses: OGGM/repo-dispatch-action@v1
      with:
        repo: OGGM/oggm
        auth_user: ${{ secrets.DispatchUser }}
        auth_secret: ${{ secrets.DispatchSecret }}
        action: build-docker-image
